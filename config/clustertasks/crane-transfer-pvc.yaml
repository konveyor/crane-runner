apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: crane-transfer-pvc
  annotations:
    description: |
      Sync's a single PVC from source to destination cluster
spec:
  params:
    - name: source-context
      type: string
      description: |
        The name of the context from kubeconfig representing the source
        cluster.

        You can get this information in your current environment using
        `kubectl config get-contexts` to describe your one or many
        contexts.
    - name: source-namespace
      type: string
      description: |
        The source cluster namespace in which pvc is synced.
    - name: source-pvc-name
      type: string
      description: |
        The name of the pvc to be synced from source cluster.
    - name: dest-context
      type: string
      description: |
        The name of the context from kubeconfig representing the destination
        cluster.

        You can get this information in your current environment using
        `kubectl config get-contexts` to describe your one or many
        contexts.
    - name: dest-pvc-name
      type: string
      description: |
        The name to give pvc in destination cluster.
      default: ""
    - name: dest-namespace
      type: string
      description: |
        The source cluster namespace in which pvc is synced.
      default: ""
    - name: dest-storage-class-name
      type: string
      description: |
        The name of the storage class to use in the destination cluster.
      default: ""
    - name: dest-storage-requests
      type: string
      description: |
        Size of the destination volume to create.
      default: ""
    - name: endpoint-type
      type: string
      description: |
        The name of the networking endpoint to be used for ingress traffic in the destination cluster
      default: ""
    - name: verify
      type: string
      description: |
        Enable checksum verification (--verify). Valid values are "true" or "false".
      default: "false"
  steps:
    - name: crane-transfer-pvc
      image: quay.io/konveyor/crane-runner:latest
      script: |
        set -e
        set -o pipefail
        set -x

        DEST_PVC_NAME="${DEST_PVC_NAME:-$(params.source-pvc-name)}"
        DEST_NAMESPACE="${DEST_NAMESPACE:-$(params.source-namespace)}"

        EXTRA_ARGS=""
        if [ ! -z "${DEST_STORAGE_CLASS_NAME}" ]; then
          EXTRA_ARGS+=" --dest-storage-class=${DEST_STORAGE_CLASS_NAME}"
        fi
        if [ ! -z "${DEST_STORAGE_REQUESTS}" ]; then
          EXTRA_ARGS+=" --dest-storage-requests=${DEST_STORAGE_REQUESTS}"
        fi
        if [ ! -z "${ENDPOINT_TYPE}" ]; then
          EXTRA_ARGS+=" --endpoint=${ENDPOINT_TYPE}"
        fi
        if [ "${VERIFY}" == "true" ]; then
          EXTRA_ARGS+=" --verify"
        fi

        crane transfer-pvc \
          --source-context=$(params.source-context) \
          --destination-context=$(params.dest-context) \
          --pvc-name $(params.source-pvc-name):${DEST_PVC_NAME} \
          --pvc-namespace $(params.source-namespace):${DEST_NAMESPACE} \
          ${EXTRA_ARGS}
      env:
        - name: KUBECONFIG
          value: $(workspaces.kubeconfig.path)/kubeconfig
        - name: DEST_PVC_NAME
          value: $(params.dest-pvc-name)
        - name: DEST_NAMESPACE
          value: $(params.dest-namespace)
        - name: DEST_STORAGE_CLASS_NAME
          value: $(params.dest-storage-class-name)
        - name: DEST_STORAGE_REQUESTS
          value: $(params.dest-storage-requests)
        - name: ENDPOINT_TYPE
          value: $(params.endpoint-type)
        - name: VERIFY
          value: $(params.verify)
  workspaces:
    - name: kubeconfig
      description: |
        The kubeconfig for accessing the source cluster.
